---
kind: pipeline
type: docker
name: go-1-22

steps:
  - name: test
    image: golang:1.22
    commands:
      - go test ./...
      - go build -v ./cmd/localrelay

  - name: goreleaser-validate
    image: goreleaser/goreleaser
    commands:
      - goreleaser check

  - name: run gitleaks
    image: plugins/gitleaks
    settings:
      path: .
      
  - name: build-failed-notification
    image: curlimages/curl:8.00.1
    environment:
      notify:
        from_secret: notification_webhook
    when:
      status:
        - failure
    commands:
      - "curl -v $notify -F 'title=Build Failed: ${DRONE_REPO}' -F $'message=[Build Failed] ${DRONE_REPO}\n[COMMIT] ${DRONE_COMMIT}\n[BRANCH] ${DRONE_BRANCH}\n'"
---
kind: pipeline
type: docker
name: go-1-19

steps:
  - name: test
    image: golang:1.19
    commands:
      - go test ./...
      - go build -v ./cmd/localrelay

  - name: build-failed-notification
    image: curlimages/curl:8.00.1
    environment:
      notify:
        from_secret: notification_webhook
    when:
      status:
        - failure
    commands:
      - "curl -v $notify -F 'title=Build Failed: ${DRONE_REPO}' -F $'message=[Build Failed] ${DRONE_REPO}\n[COMMIT] ${DRONE_COMMIT}\n[BRANCH] ${DRONE_BRANCH}\n'"

---
kind: pipeline
type: docker
name: go-1-20

steps:
  - name: test
    image: golang:1.20
    commands:
      - go test ./...
      - go build -v ./cmd/localrelay

  - name: build-failed-notification
    image: curlimages/curl:8.00.1
    environment:
      notify:
        from_secret: notification_webhook
    when:
      status:
        - failure
    commands:
      - "curl -v $notify -F 'title=Build Failed: ${DRONE_REPO}' -F $'message=[Build Failed] ${DRONE_REPO}\n[COMMIT] ${DRONE_COMMIT}\n[BRANCH] ${DRONE_BRANCH}\n'"

---
kind: pipeline
type: docker
name: go-1-21

steps:
  - name: test
    image: golang:1.21
    commands:
      - go test ./...
      - go build -v ./cmd/localrelay

  - name: build-failed-notification
    image: curlimages/curl:8.00.1
    environment:
      notify:
        from_secret: notification_webhook
    when:
      status:
        - failure
    commands:
      - "curl -v $notify -F 'title=Build Failed: ${DRONE_REPO}' -F $'message=[Build Failed] ${DRONE_REPO}\n[COMMIT] ${DRONE_COMMIT}\n[BRANCH] ${DRONE_BRANCH}\n'"


---
kind: pipeline
type: docker
name: osv-dependency-scan

steps:
  - name: osv-vuln-dep-scanner
    image: ghcr.io/google/osv-scanner:latest
    commands:
      - /osv-scanner --config=/drone/src/.github/osv.toml -r ./

  - name: build-failed-notification
    image: curlimages/curl:8.00.1
    environment:
      notify:
        from_secret: notification_webhook
    when:
      status:
        - failure
    commands:
      - "curl -v $notify -F 'title=Vulnerability In ${DRONE_REPO}' -F $'message=[Build Failed] ${DRONE_REPO}\n[COMMIT] ${DRONE_COMMIT}\n[BRANCH] ${DRONE_BRANCH}'"